---
# Not using snapshot module from ansible, as supporting 1.4.4 is needed
- name: Create snapshot from EBS volume
  command: 'aws ec2 create-snapshot --region {{ ansible_ec2_placement_region }} --description "{{ buri_ami_description }}" --volume-id "{{ ebs_volume_id }}" --output text'
  register: snap

- name: Saving Snapshot ID as a fact for later use
  set_fact:
    ebs_snapshot_id: "{{ item.split('\t')[4] }}"
  with_items: snap.stdout

- name: Waiting for completion of snapshot
  command: 'aws ec2 describe-snapshots --region {{ ansible_ec2_placement_region }} --snapshot-ids {{ ebs_snapshot_id }} --output text'
  register: result
  until: result.stdout.find("pending") == -1
  retries: 300
  delay: 5

- name: Tagging snapshot
  command: 'aws ec2 create-tags --region {{ ansible_ec2_placement_region }} --resources "{{ ebs_snapshot_id }}" --tags "[{\"Key\":\"Name\",\"Value\":\"{{ buri_ami_full_name }} {{ buri_disk_type }} EBS AMI\"}]"'


